# coding: utf-8

"""
    CRM API

    This page contains complete API documentation for CRM software.  # noqa: E501

    The version of the OpenAPI document: 3.0.0
    Contact: support@qualityunit.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictStr

class RedeemCodeSignup(BaseModel):
    """
    RedeemCodeSignup
    """
    code: StrictStr = Field(...)
    name: StrictStr = Field(...)
    email: StrictStr = Field(...)
    subdomain: StrictStr = Field(...)
    grtoken: StrictStr = Field(...)
    source_id: Optional[StrictStr] = None
    pap_visitor_id: Optional[StrictStr] = None
    ga_client_id: Optional[StrictStr] = None
    __properties = ["code", "name", "email", "subdomain", "grtoken", "source_id", "pap_visitor_id", "ga_client_id"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> RedeemCodeSignup:
        """Create an instance of RedeemCodeSignup from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> RedeemCodeSignup:
        """Create an instance of RedeemCodeSignup from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return RedeemCodeSignup.parse_obj(obj)

        _obj = RedeemCodeSignup.parse_obj({
            "code": obj.get("code"),
            "name": obj.get("name"),
            "email": obj.get("email"),
            "subdomain": obj.get("subdomain"),
            "grtoken": obj.get("grtoken"),
            "source_id": obj.get("source_id"),
            "pap_visitor_id": obj.get("pap_visitor_id"),
            "ga_client_id": obj.get("ga_client_id")
        })
        return _obj

