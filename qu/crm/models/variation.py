# coding: utf-8

"""
    CRM API

    This page contains complete API documentation for CRM software.  # noqa: E501

    The version of the OpenAPI document: 3.0.0
    Contact: support@qualityunit.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Any, Dict, Optional
from pydantic import BaseModel, Field, StrictBool, StrictStr

class Variation(BaseModel):
    """
    Variation
    """
    id: StrictStr = Field(...)
    billable: Optional[StrictBool] = None
    name: Optional[StrictStr] = None
    product_id: Optional[StrictStr] = None
    product_name: Optional[StrictStr] = None
    full_name: Optional[StrictStr] = Field(None, description="Full name in format Product - Variation")
    description: Optional[StrictStr] = None
    limits: Optional[Dict[str, Any]] = None
    __properties = ["id", "billable", "name", "product_id", "product_name", "full_name", "description", "limits"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Variation:
        """Create an instance of Variation from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> Variation:
        """Create an instance of Variation from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return Variation.parse_obj(obj)

        _obj = Variation.parse_obj({
            "id": obj.get("id"),
            "billable": obj.get("billable"),
            "name": obj.get("name"),
            "product_id": obj.get("product_id"),
            "product_name": obj.get("product_name"),
            "full_name": obj.get("full_name"),
            "description": obj.get("description"),
            "limits": obj.get("limits")
        })
        return _obj

